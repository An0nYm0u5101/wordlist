#!/bin/bash

ASPELL=aspell
HUNSPELL=hunspell

set -e

export LANG=C
export LC_ALL=C
export LC_CTYPE=C
export LC_COLLATE=C

SIZE=60

mk-list() { ../mk-list -d final "$@"; }

prep() {
  echo prep 

  cat misc/{offensive.1,offensive.2,profane.1} | sort -u > nosug

  cp en.aff eng_affix.dat

  cat << EOF > eng.dat
name eng
charset iso8859-1
special ' -*-
affix eng
EOF
}

doit() {
  echo creating $1.dic

  eval $2 | sort -u > $1.0

  comm $1.0 nosug -12 > $1-nosug.1

  comm $1.0 nosug -23 > $1.1

  $ASPELL -l ./eng munch-list < $1-nosug.1 | grep -v '^\(XXX\|>>>\)' | ./add-no-suggest > $1.2

  $ASPELL -l ./eng munch-list < $1.1 | grep -v '^\(XXX\|>>>\)' >> $1.2

  cat en.dic.supp >> $1.2

  wc -l $1.2 | cut -d' ' -f1 > $1.dic
  cat $1.2 | sort >> $1.dic

  cp en.aff $1.aff
  
  WHAT="$1 Hunspell Dictionary" sh README_en.txt.sh > README_$1.txt
  echo "Wordlist Command: $2" >> README_$1.txt

  rm -f $1.zip
  zip -9 $1.zip README_$1.txt $1.dic $1.aff

  mkdir -p hunspell
  cp -p $1.zip hunspell/

  #echo check

  cat $1-nosug.1 $1.1 | sort -u > $1.tocheck

  #hunspell -l -d ./$1 < $1.dic.tocheck > misspelled

  mv $1.tocheck hunspell/$1.txt
  gzip -9f hunspell/$1.txt
}


prep

doit en_US "mk-list en_US $SIZE | src/deaccent"
doit en_CA "mk-list en_CA $SIZE | src/deaccent"
doit en_GB-ize "mk-list en_GB-ize $SIZE | src/deaccent"
doit en_GB-ise "mk-list en_GB-ise $SIZE | src/deaccent"

with-and-without-accents() { 
  tmp1=`mktemp tmp-XXX`
  tmp2=`mktemp tmp-XXX`
  cat - > $tmp1
  src/deaccent < $tmp1 > $tmp2
  cat $tmp1 $tmp2
  rm $tmp1 $tmp2
}

doit en_US-large "mk-list -v0 en_US 70 | with-and-without-accents "
doit en_CA-large "mk-list -v0 en_CA 70 | with-and-without-accents "
doit en_GB-large "mk-list -v0 en_GB-ize en_GB-ise 70 | with-and-without-accents"

sh README_en.txt.sh > hunspell/README

#rm eng*.dat nosug en_US*.? en_CA*.?
